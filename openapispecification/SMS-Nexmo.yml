---
swagger: "2.0"
info:
    description: "Nexmo's SMS API allows you to send and receive text messages to users around the globe through simple RESTful APIs.\n  \n  * Programmatically send and receive high volume of SMS anywhere in the world.\n  * Build apps that scale with the web technologies that you are already using.\n  * Send SMS with low latency and high delivery rates.\n  * Receive SMS for free using SMS-enabled local numbers in countries around the world.\n  * Only pay for what you use, nothing more.\n\n ## [KPN Developer](https://developer.kpn.com/)<br/> [Getting Started](https://developer.kpn.com/getting-started)\n\n ---"
    version: v1.1.1
    title: SMS-Nexmo
    termsOfService: https://developer.kpn.com/legal
    contact:
        name: API Support
        url: https://developer.kpn.com/support
        email: api_developer@kpn.com
host: api-prd.kpn.com
basePath: /communication/nexmo/sms
schemes:
    - https
paths:
    /send:
        post:
            tags:
                - Send SMS
            summary: Send SMS
            description: Send an outbound SMS
            consumes:
                - application/x-www-form-urlencoded
            produces:
                - application/json
            parameters:
                - name: from
                  in: formData
                  description: |-
                      The name or number the message should be sent from. Alphanumeric senderID's are not supported in all countries, see Global Messaging for more details. If alphanumeric, spaces will be ignored. Numbers are specified in E.164 format. You can use any alphanumeric string up to 11 characters (or up to 15 numeric characters).  It is recommended to send at least "3" characters (in case of alphanumeric), as it might show differently on different mobile devices. Moreover, alphanumeric cannot contain spaces as well.
                        example: `AcmeInc`.Note: If the value in your from parameter does not obey these rules it might be modified in transit or not delivered at all.
                  required: true
                  type: string
                  default: "{{from}}"
                - name: to
                  in: formData
                  description: "The number that the message should be sent to. Numbers are specified in E.164 format.\n  minLength: 7\n  maxLength: 15\n  pattern: '\\d{7,15}'\n  example: 447700900000              "
                  required: true
                  type: string
                  default: "{{to}}"
                - name: text
                  in: formData
                  description: "The body of the message being sent. If your message contains characters that can be encoded according to the GSM Standard and Extended tables then you can set the `type` to `text`. If your message contains characters outside this range, then you will need to set the `type` to `unicode`.\n  example: Hello World! "
                  required: false
                  type: string
                  default: "{{text}}"
                - name: ttl
                  in: formData
                  description: |-
                      **Advanced**: The duration in milliseconds the delivery of an SMS will be attempted.§§ By default Nexmo attempt delivery for 72 hours, however the maximum effective value depends on the operator and is typically 24 - 48 hours. We recommend this value should be kept at its default or at least 30 minutes.
                        minimum: 20000
                        maximum: 604800000
                        example: 900000
                  required: false
                  type: integer
                  default:
                - name: status-report-req
                  in: formData
                  description: "**Advanced**: Boolean indicating if you like to receive a [Delivery Receipt](/messaging/sms/building-blocks/receive-a-delivery-receipt).'"
                  required: false
                  type: boolean
                  default: false

                - name: callback
                  in: formData
                  description: "**Advanced**: The webhook endpoint the delivery receipt for this sms is sent to. This parameter overrides the webhook endpoint you set in Dashboard.\n  "
                  required: false
                  type: string
                  default: ""
                - name: message-class
                  in: formData
                  description: "**Advanced**: The Data Coding Scheme value of the message"
                  required: false
                  type: integer
                  enum:
                      - 0
                      - 1
                      - 2
                      - 3

                - name: type
                  in: formData
                  description: "**Advanced**: The format of the message body'' example: text"
                  required: false
                  type: string
                  enum:
                      - text
                      - binary
                      - wappush
                      - unicode
                      - vcal
                      - vcard

                - name: vcard
                  in: formData
                  description: "**Advanced**: A business card in [vCard format](https://en.wikipedia.org/wiki/VCard). Depends on `type` parameter having the value `vcard`."
                  required: false
                  type: string
                  format: vcard
                  default: ""
                - name: vcal
                  in: formData
                  description: "**Advanced**: A calendar event in [vCal format](https://en.wikipedia.org/wiki/VCal). Depends on `type` parameter having the value `vcal`."
                  required: false
                  type: string
                  format: vcal
                  default: ""
                - name: body
                  in: formData
                  description: "**Advanced**: Hex encoded binary data. Depends on `type` parameter having the value `binary`."
                  required: false
                  type: string
                  default: ""
                - name: udh
                  in: formData
                  description: "**Advanced**: Your custom Hex encoded [User Data Header](https://en.wikipedia.org/wiki/User_Data_Header). Depends on `type` parameter having the value `binary`."
                  required: false
                  type: string
                  default: ""
                - name: protocol-id
                  in: formData
                  description: "**Advanced**: The value of the [protocol identifier](https://en.wikipedia.org/wiki/GSM_03.40#Protocol_Identifier) to use. Ensure that the value is aligned with `udh`."
                  required: false
                  type: integer
                  default:
                - name: title
                  in: formData
                  description: "**Advanced**: The title for a wappush SMS. Depends on `type` parameter having the value `wappush`.   "
                  required: false
                  type: string
                  default: "title"
                - name: url
                  in: formData
                  description: "**Advanced**: The URL of your website. Depends on `type` parameter having the value `wappush`."
                  required: false
                  type: string
                  default: ""
                - name: validity
                  in: formData
                  description: "**Advanced**: The availability for an SMS in milliseconds. Depends on `type` parameter having the value `wappush`."
                  required: false
                  type: string
                  default: ""
                - name: client-ref
                  in: formData
                  description: "**Advanced**: You can optionally include your own reference of up to 40 characters."
                  required: false
                  type: string
                  default: ""
            security:
                - OAuth2: []
            responses:
                "200":
                    description: OK
                    schema:
                        $ref: "#/definitions/SendSMSResponse"
                "400":
                    description: Bad Request
                    schema:
                        $ref: "#/definitions/ErrorResponse"
                "401":
                    description: Unauthorized
                    schema:
                        $ref: "#/definitions/ErrorResponse"
                "403":
                    description: Forbidden
                    schema:
                        $ref: "#/definitions/ErrorResponse"
                "404":
                    description: Not Found
                    schema:
                        $ref: "#/definitions/ErrorResponse"
                "429":
                    description: Too Many Requests
                    schema:
                        $ref: "#/definitions/ErrorResponse"
                "500":
                    description: Server Error
                    schema:
                        $ref: "#/definitions/ErrorResponse"
                "503":
                    description: Service Unavailable
                    schema:
                        $ref: "#/definitions/ErrorResponse"
    /register:
        post:
            tags:
                - Register webhook - Demo testing ONLY
            summary: Register callback URL to webhook for incoming messages
            description: "Handling inbound SMS with with API is easy. You just need to create a webhook endpoint and configure your number or account to point to the endpoint. \n- If you are a test user  try inbound messaging using below using 'Register Webhook endpoint'. \n- If you are production user,  use the `Phone Numbers API` to search, buy and manage your virtual number.\n"
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                - name: to
                  in: formData
                  description: The phone number you use for testing, without buying a virtual number. This is not applicable if you are a premium user. Remember, this is only applicable if you are a demo user.
                  required: true
                  type: string
                  default: ""
                - name: callback_url
                  in: formData
                  description: "The callback URL for inbound SMS.           "
                  required: true
                  type: string
                  default: ""
            security:
                - OAuth2: []
            responses:
                "200":
                    description: OK
                    schema:
                        $ref: "#/definitions/RegisterWebhookResponse"
                "400":
                    description: Bad Request
                    schema:
                        $ref: "#/definitions/ErrorResponse"
                "401":
                    description: Unauthorized
                    schema:
                        $ref: "#/definitions/ErrorResponse"
                "403":
                    description: Forbidden
                    schema:
                        $ref: "#/definitions/ErrorResponse"
                "404":
                    description: Not Found
                    schema:
                        $ref: "#/definitions/ErrorResponse"
                "429":
                    description: Too Many Requests
                    schema:
                        $ref: "#/definitions/ErrorResponse"
                "500":
                    description: Server Error
                    schema:
                        $ref: "#/definitions/ErrorResponse"
                "503":
                    description: Service Unavailable
                    schema:
                        $ref: "#/definitions/ErrorResponse"
    /https://example.com:webhooks/delivery-receipt:
        post:
            tags:
                - Callback
            summary: Delivery Receipt
            description: This is not an API call but it is to showcase how the schema of delivery receipt will look like. You can get delivery receipt by using `status-report-req` and `callback` parameters of 'Send SMS' request body.
            parameters:
                - in: body
                  name: delivery-receipt
                  description: The following are parameters sent in as a delivery receipt callback. You can subscribe to webhooks to receive notification when the delivery status of an SMS that you have sent with Nexmo changes.
                  required: false
                  schema:
                      $ref: "#/definitions/DeliveryReceipt"
            responses:
                "200":
                    description: Your server returns this code if it accepts the callback
    /https://example.com:webhooks/inbound-sms:
        post:
            tags:
                - Webhook
            summary: Inbound SMS
            description: This is not an API call but it is to showcase how the schema of inbound SMS will look like. You can get inbound SMS by registering your webhook URL using `Register webhook` and then passing 'inbound' header value as 'yes' in 'Send SMS'.
            parameters:
                - in: body
                  name: inbound-sms
                  description: If you rent one or more virtual numbers from Nexmo, inbound messages to that number are sent to your webhook endpoint. When you receive an inbound message, you must send a 2xx response. If you do not send a 2xx response Nexmo will resend the inbound message for the next 24 hours.
                  required: false
                  schema:
                      $ref: "#/definitions/InboundMessage"
            responses:
                "200":
                    description: Your server returns this code if it accepts the callback
securityDefinitions:
    OAuth2:
        type: oauth2
        tokenUrl: https://api-prd.kpn.com/oauth/client_credential/accesstoken?grant_type=client_credentials
        flow: application
definitions:
    RegisterWebhookRequest:
        type: object
        properties:
            callback_url:
                type: string
                example: https://yourdomain.com/webhook
                description: your webhook endpoint on an HTTP server
                title: Callback URL
            to:
                type: string
                example: "3161111111"
                description: Please enter the virtual number that has been provided to you. If you are a test user then please enter the same mobile number that you are using for test purposes. Individual virtual numbers can be alloted to premium users which can be registered against the webhook enpoint.
                title: Mobile Number
    RegisterWebhookResponse:
        type: object
        properties:
            message:
                type: string
                example: Your callback url is registered.
                description: response message
    SendSMSResponse:
        type: object
        properties:
            message-count:
                type: integer
                example: 1
                description: The amount of messages in the request
            messages:
                type: array
                items:
                    $ref: "#/definitions/SendSMSResponseMessage"
    SendSMSResponseMessage:
        type: object
        properties:
            to:
                type: string
                example: "447700900000"
                description: The number the message was sent to
            message-id:
                type: string
                example: 0A0000000123ABCD1
                description: The ID of the message
            status:
                type: string
                example: "0"
                description: "Code | Description\n   -- | --\n   '1' | You have exceeded the submission capacity allowed on this account. Please wait and retry.\n   '2' | Your request is incomplete and missing some mandatory parameters.\n   '3'\t| The value of one or more parameters is invalid.\n   '4'\t| The api_key / api_secret you supplied is either invalid or disabled.\n   '5'\t| There was an error processing your request in the Platform.\n   '6' | The Platform was unable to process your request. For example, due to an unrecognised prefix for the phone number.\n   '7'\t| The number you are trying to submit to is blacklisted and may not receive messages.\n   '8' | The api_key you supplied is for an account that has been barred from submitting messages.\n   '9' | Your pre-paid account does not have sufficient credit to process this message.\n   '11' | This account is not provisioned for REST submission, you should use SMPP instead.\n   '12' | The length of udh and body was greater than 140 octets for a binary type SMS request.\n   '13' |\tMessage was not submitted because there was a communication failure.\n   '14' |\tMessage was not submitted due to a verification failure in the submitted signature.\n   '15' |\tDue to local regulations, the SenderID you set in from in the request was not accepted. Please check the Global messaging section.\n   '16' |\tInvalid TTL\tThe value of ttl in your request was invalid.\n   '19' |\tYour request makes use of a facility that is not enabled on your account.\n   '20' |\tThe value of message-class in your request was out of range. See https://en.wikipedia.org/wiki/Data_Coding_Scheme.\n   '23' |\tYou did not include https in the URL you set in callback.\n   '29' |\tThe phone number you set in to is not in your pre-approved destination list. To send messages to this phone number, add it using Dashboard.\n   '34' |\tThe phone number you supplied in the to parameter of your request was either missing or invalid.\n"
            remaining-balance:
                type: string
                example: "3.14159265"
                description: Your remaining balance
            message-price:
                type: string
                example: "0.03330000"
                description: The cost of the message
            network:
                type: string
                example: "12345"
                description: The ID of the network of the recipient
    DeliveryReceipt:
        type: object
        properties:
            msisdn:
                type: string
                example: "447700900000"
                description: The number the message was sent to. Numbers are specified in E.164 format.
            to:
                type: string
                example: AcmeInc
                description: The SenderID you set in `from` in your request.
            network-code:
                type: string
                example: "12345"
                description: The Mobile Country Code Mobile Network Code (MCCMNC) of the carrier this phone number is registered with.
            messageId:
                type: string
                example: 0A0000001234567B
                description: The Nexmo ID for this message.
            price:
                type: string
                example: "0.03330000"
                description: The cost of the message
            status:
                type: string
                example: delivered
                description: A code that explains where the message is in the delivery process.
                x-possible-values:
                    - delivered
                    - expired
                    - failed
                    - rejected
                    - accepted
                    - buffered
                    - unknown
            scts:
                type: string
                example: "2001011400"
                description: When the DLR was recieved from the carrier in the following format `YYMMDDHHMM`. For example, `2001011400` is at `2020-01-01 14:00`
            err-code:
                type: string
                example: "0"
                description: The status of the request. Will be a non `0` value if there has been an error. See the [SMS error reference](/api-errors/sms) for more details
            message-timestamp:
                type: string
                example: 2020-01-01 12:00:00
                description: The time when Nexmo started to push this Delivery Receipt to your webhook endpoint.
    InboundMessage:
        type: object
        properties:
            msisdn:
                type: string
                example: "447700900001"
                description: "`required` The phone number that this inbound message was sent from. Numbers are specified in E.164 format."
            to:
                type: string
                example: "447700900000"
                description: "`required` The phone number the message was sent to. **This is your virtual number**. Numbers are specified in E.164 format."
            messageId:
                type: string
                example: 0A0000000123ABCD1
                description: "`required` The ID of the message  (required)"
            text:
                type: string
                example: Hello world
                description: "`required` The message body for this inbound message.  (required)"
            type:
                type: string
                example: text
                description: |
                    Possible values are: >-
                      `required`
                      - `text` - standard text.
                      - `unicode` - URLencoded   unicode  . This is valid for standard GSM, Arabic, Chinese, double-encoded characters and so on.
                      - `binary` - a binary message.
            keyword:
                type: string
                example: Hello
                description: "`required` The first word in the message body. This is typically used with short codes."
            message-timestamp:
                type: string
                example: 2020-01-01 12:00:00
                description: "`required` The time when Nexmo started to push this Delivery Receipt to your webhook endpoint."
            timestamp:
                type: string
                example: "1578787200"
                description: A unix timestamp representation of message-timestamp.
            nonce:
                type: string
                example: aaaaaaaa-bbbb-cccc-dddd-0123456789ab
                description: A random string that forms part of the signed set of parameters, it adds an extra element of unpredictability into the signature for the request. You use the nonce and timestamp parameters with your shared secret to calculate and validate the signature for inbound messages.
            concat:
                type: string
                example: "true"
                description: True - if this is a concatenated message.
            concat-ref:
                type: string
                example: "1"
                description: The transaction reference. All parts of this message share this value.
            concat-total:
                type: string
                example: "3"
                description: The number of parts in this concatenated message.
            concat-part:
                type: string
                example: "2"
                description: The number of this part in the message. Counting starts at 1.
            data:
                type: string
                format: binary
                description: The content of this message, if type is binary.
            udh:
                type: string
                description: The hex encoded User Data Header, if type is binary
    ErrorResponse:
        type: object
        properties:
            transactionId:
                type: string
                description: transaction id of the the request
                title: Transaction ID
            status:
                type: string
                description: Status
                title: Status
            name:
                type: string
                description: Error name
                title: Error name
            message:
                type: string
                description: Error message
                title: Error message
            info:
                type: string
                description: Additional information about error
                title: Info
externalDocs:
    description: HTTP response headers
    url: https://developer.kpn.com/documentation-response-headers
